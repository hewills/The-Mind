// room script file

  Object* card[];   //Array of every players cards (10)
  Object* dog[];    //Array of every dogs cards (10)
  GUI* guicard[];
  
  int cardlist[10];

//Check if number already exists in list of cards dealt
function have_card_already(int cardnum, int max) {
  
  for (int i = 0; i < max; i++) {
    
    if (cardnum == cardlist[i])
    return 1;
    
  }  
  return 0;
}


//Deal random cards to player and dog
function deal_cards(int max) {
  
  int num;
  
  for (int i = 0; i < max; i++) {
   
   //Pick random number, until you find one not already chosen
   do {
      num = Random(100);
   }
   while(have_card_already(num, max));
   
   cardlist[i] = num;   
  }
 
}


function room_Load()
{

// Initilize player cards
  card = new Object[max_level];
  dog = new Object[max_level];
  
  guicard = new GUI[max_level];
  guicard[0] = gCard;
  guicard[1] = gCard;
  
  guicard[0].X = 100;
  guicard[0].Y = 100;

  
  guicard[1].X = 12;
  guicard[1].Y = 50;
  
  guicard[0].Visible = true;
  guicard[1].Visible = true;
  
  
  // Card objects
  card[0] = oCard0;
  card[1] = oCard1;
  card[2] = oCard2;
  card[3] = oCard3;
  card[4] = oCard4;
  card[5] = oCard5;
  card[6] = oCard6;
  card[7] = oCard7;
  card[8] = oCard8;
  card[9] = oCard9;
  
  
  //Remove cards
  for (int i = 0; i < max_level; i++)
  {
    card[i].Visible = false;
  }
  
  //Only show cards for current level
  for (int i = 0; i < curr_level; i++)
  {
    card[i].Visible = true;
  }
  
  //Initialize cardlist
  for (int i = 0; i < max_level; i++) {
   
   cardlist[i] = -1;
    
  }
  
  //Set cardlist array
  deal_cards(max_level);
 
 
  
 /*Initialize people
  for (int i = 0; i < num_people; i++)
  { 
    player2[i].SetProperty("infected",0);
    player2[i].SetProperty("odds",Random(10));
    player2[i].SetProperty("direction",Random(7)); //Set people directions
    player2[i].SetProperty("speed",Random(1)+1); //Set people speed
    player2[i].SetTextProperty("type","p"); //Set to person type
    p_x[i] = IntToFloat(person[i].X);
    p_y[i] = IntToFloat(person[i].Y);
  }
  
  num_infected =  person[i].GetProperty("infected") + num_infected;
  
  
  
  
  //person[1].X, person[1].Y
}
*/

}


// After Room Fades In
function room_AfterFadeIn()
{
  
  Display("Level %d", curr_level );
  Display("Card1 is a %d", cardlist[0]);
  Display("Card2 is a %d", cardlist[1]);
    
  for (int i = 0; i < max_level; i++)
  {
    card[i].Graphic = 3;
    card[i].SetProperty("value",cardlist[i]);
  }
  
  lblNum.Text = String.Format("%d", cardlist[0]);

}
